{"mappings":"gfACA,IAAAA,EAAAC,EAAA,SAEMC,EAAUC,SAASC,cAAc,SAyCvC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EACET,EAAAe,OAAOC,QAAQ,qBAAoCC,OAAfX,EAAS,QAAYW,OAANV,EAAM,QAI3DG,EACEV,EAAAe,OAAOG,QAAQ,oBAAmCD,OAAfX,EAAS,QAAYW,OAANV,EAAM,O,GAI3DA,E,IAEFY,MAAK,WACJC,QAAQC,IAAI,uBAAwCJ,OAAfX,EAAS,QAAYW,OAANV,EAAM,M,IAE3De,OAAM,WACLF,QAAQC,IAAI,sBAAqCJ,OAAfX,EAAS,QAAYW,OAANV,EAAM,M,IA9D7Da,QAAQC,IAAInB,GAEZA,EAAQqB,iBAAiB,UAEzB,SAAwBC,GACtBA,EAAIC,iBAEJ,IAAInB,EAAW,EACXC,EAAQmB,OAAOF,EAAIG,cAAcC,SAASrB,MAAMsB,OACpDT,QAAQC,IAAI,gBAAiBd,GAE7B,IAAIuB,EAAOJ,OAAOF,EAAIG,cAAcC,SAASE,KAAKD,OAClDT,QAAQC,IAAI,eAAgBS,GAE5B,IAAIC,EAASL,OAAOF,EAAIG,cAAcC,SAASG,OAAOF,OACtDT,QAAQC,IAAI,iBAAkBU,GAE9BxB,GAASuB,EAET,IAAK,IAAIE,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChC1B,GAAY,EAEZC,GAAgBuB,EAEhBV,QAAQC,IAAI,eAAgBf,GAC5Bc,QAAQC,IAAI,YAAad,GAEzBF,EAAcC,EAAUC,GAIwCA,EAA1D,EACRwB,EAAS,EACTD,EAAO,EACPxB,EAAW,EACXkB,EAAIG,cAAcC,SAASrB,MAAMsB,MAAQ,GACzCL,EAAIG,cAAcC,SAASE,KAAKD,MAAQ,GACxCL,EAAIG,cAAcC,SAASG,OAAOF,MAAQ,E","sources":["src/js/03-promises.js"],"sourcesContent":["// Инициализация библиотеки значков Notiflix + npm i notiflix\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\nconsole.log(formRef);\n\nformRef.addEventListener('submit', onBeginPromise);\n\nfunction onBeginPromise(evt) {\n  evt.preventDefault();\n\n  let position = 0;\n  let delay = Number(evt.currentTarget.elements.delay.value);\n  console.log('delay in Form', delay);\n\n  let step = Number(evt.currentTarget.elements.step.value);\n  console.log('step in Form', step);\n\n  let amount = Number(evt.currentTarget.elements.amount.value);\n  console.log('amount in Form', amount);\n\n  delay -= step;\n\n  for (let i = 1; i <= amount; i += 1) {\n    position += 1;\n\n    delay = delay + step;\n\n    console.log('position [i]', position);\n    console.log('delay [i]', delay);\n\n    createPromise(position, delay);\n  }\n\n  // Обновление функции и внешних параметров в инпутах для поторного цикла работы\n  delay = 0;\n  amount = 0;\n  step = 0;\n  position = 0;\n  evt.currentTarget.elements.delay.value = '';\n  evt.currentTarget.elements.step.value = '';\n  evt.currentTarget.elements.amount.value = '';\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(\n          Notify.success(`Fulfilled promise ${position} in ${delay}ms`)\n          // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`)\n        );\n      } else {\n        reject(\n          Notify.failure(`Rejected promise ${position} in ${delay}ms`)\n          // console.log(`❌ Rejected promise ${position} in ${delay}ms`)\n        );\n      }\n    }, delay);\n  })\n    .then(() => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(() => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formRef","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","Notify","success","concat","failure","then","console","log","catch","addEventListener","evt","preventDefault","Number","currentTarget","elements","value","step","amount","i"],"version":3,"file":"03-promises.834cda82.js.map"}